{"version":3,"file":"ngstack-code-editor.js","sources":["ng://@ngstack/code-editor/lib/services/code-editor.service.ts","ng://@ngstack/code-editor/lib/services/typescript-defaults.service.ts","ng://@ngstack/code-editor/lib/services/javascript-defaults.service.ts","ng://@ngstack/code-editor/lib/services/json-defaults.service.ts","ng://@ngstack/code-editor/lib/code-editor/code-editor.component.ts","ng://@ngstack/code-editor/lib/code-editor.module.ts","ng://@ngstack/code-editor/public_api.ts","ng://@ngstack/code-editor/ngstack-code-editor.ts"],"sourcesContent":["import { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { CodeEditorSettings } from '../editor-settings';\n\ndeclare const monaco: any;\n\nexport const EDITOR_SETTINGS = new InjectionToken<CodeEditorSettings>(\n  'EDITOR_SETTINGS'\n);\n\nexport interface TypingsInfo {\n  entryPoints: { [key: string]: string };\n  files: Array<{\n    content: string;\n    name: string;\n    url: string;\n    path: string;\n  }>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeEditorService {\n  // baseUrl = 'assets/monaco';\n  baseUrl = 'https://unpkg.com/monaco-editor/min';\n\n  // typingsWorkerUrl = 'assets/workers/typings-worker.js';\n  typingsWorkerUrl =\n    'https://unpkg.com/@ngstack/code-editor/workers/typings-worker.js';\n\n  typingsLoaded = new Subject<TypingsInfo>();\n  loaded = new Subject<{ monaco: any }>();\n\n  loadingTypings = new BehaviorSubject<boolean>(false);\n\n  private typingsWorker: Worker;\n\n  constructor(\n    @Optional()\n    @Inject(EDITOR_SETTINGS)\n    settings: CodeEditorSettings\n  ) {\n    const defaults = {\n      baseUrl: this.baseUrl,\n      typingsWorkerUrl: this.typingsWorkerUrl,\n      ...settings\n    };\n\n    this.baseUrl = defaults.baseUrl;\n    this.typingsWorkerUrl = defaults.typingsWorkerUrl;\n  }\n\n  private loadTypingsWorker(): Worker {\n    if (!this.typingsWorker && (<any>window).Worker) {\n      if (this.typingsWorkerUrl.startsWith('http')) {\n        const proxyScript = `importScripts('${this.typingsWorkerUrl}');`;\n        const proxy = URL.createObjectURL(\n          new Blob([proxyScript], { type: 'text/javascript' })\n        );\n        this.typingsWorker = new Worker(proxy);\n      } else {\n        this.typingsWorker = new Worker(this.typingsWorkerUrl);\n      }\n      this.typingsWorker.addEventListener('message', e => {\n        this.loadingTypings.next(false);\n        this.typingsLoaded.next(e.data);\n      });\n    }\n    return this.typingsWorker;\n  }\n\n  loadTypings(dependencies: string[]) {\n    if (dependencies && dependencies.length > 0) {\n      const worker = this.loadTypingsWorker();\n      if (worker) {\n        this.loadingTypings.next(true);\n        worker.postMessage({\n          dependencies\n        });\n      }\n    }\n  }\n\n  loadEditor(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const onGotAmdLoader = () => {\n        (<any>window).require.config({\n          paths: { vs: `${this.baseUrl}/vs` }\n        });\n\n        if (this.baseUrl.startsWith('http')) {\n          const proxyScript = `\n            self.MonacoEnvironment = {\n              baseUrl: \"${this.baseUrl}\"\n            };\n            importScripts('${this.baseUrl}/vs/base/worker/workerMain.js');\n          `;\n          const proxy = URL.createObjectURL(\n            new Blob([proxyScript], { type: 'text/javascript' })\n          );\n          window['MonacoEnvironment'] = {\n            getWorkerUrl: function() {\n              return proxy;\n            }\n          };\n        }\n\n        (<any>window).require(['vs/editor/editor.main'], () => {\n          this.loaded.next({ monaco });\n          resolve();\n        });\n      };\n\n      if (!(<any>window).require) {\n        const loaderScript = document.createElement('script');\n        loaderScript.type = 'text/javascript';\n        loaderScript.src = `${this.baseUrl}/vs/loader.js`;\n        loaderScript.addEventListener('load', onGotAmdLoader);\n        document.body.appendChild(loaderScript);\n      } else {\n        onGotAmdLoader();\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService, TypingsInfo } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypescriptDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.typescript.typescriptDefaults;\n\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      noEmit: true,\n      noLib: true,\n      emitDecoratorMetadata: true,\n      experimentalDecorators: true,\n      allowNonTsExtensions: true,\n      declaration: true,\n      lib: ['es2017', 'dom'],\n      baseUrl: '.',\n      paths: {}\n    });\n\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: true,\n      noSyntaxValidation: true\n    });\n    */\n  }\n\n  updateTypings(typings: TypingsInfo) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n\n  addExtraLibs(libs: Array<{ path: string; content: string }> = []): void {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n\n  addLibraryPaths(paths: { [key: string]: string } = {}): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService, TypingsInfo } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JavascriptDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.typescript.javascriptDefaults;\n\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      allowNonTsExtensions: true,\n      baseUrl: '.',\n      paths: {}\n    });\n\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n    */\n  }\n\n  updateTypings(typings: TypingsInfo) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n\n  addExtraLibs(libs: Array<{ path: string; content: string }> = []): void {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n\n  addLibraryPaths(paths: { [key: string]: string } = {}): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.json.jsonDefaults;\n\n    defaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: true,\n      schemas: [\n        ...defaults._diagnosticsOptions.schemas,\n        {\n          uri: 'http://myserver/foo-schema.json',\n          // fileMatch: [id],\n          // fileMatch: ['*.json'],\n          schema: {\n            type: 'object',\n            properties: {\n              p1: {\n                enum: ['v1', 'v2']\n              },\n              p2: {\n                $ref: 'http://myserver/bar-schema.json'\n              }\n            }\n          }\n        },\n        {\n          uri: 'http://myserver/bar-schema.json',\n          // fileMatch: [id],\n          // fileMatch: ['*.json'],\n          schema: {\n            type: 'object',\n            properties: {\n              q1: {\n                enum: ['x1', 'x2']\n              }\n            }\n          }\n        }\n      ]\n    });\n  }\n\n  addSchemas(\n    id: string,\n    definitions: Array<{ uri: string; schema: Object }> = []\n  ) {\n    const defaults = this.monaco.languages.json.jsonDefaults;\n    const options = defaults.diagnosticsOptions;\n\n    const schemas: { [key: string]: Object } = {};\n\n    if (options && options.schemas && options.schemas.length > 0) {\n      options.schemas.forEach(schema => {\n        schemas[schema.uri] = schema;\n      });\n    }\n\n    for (const { uri, schema } of definitions) {\n      schemas[uri] = {\n        uri,\n        schema,\n        fileMatch: [id || '*.json']\n      };\n    }\n\n    // console.log(schemas);\n    // console.log(Object.values(schemas));\n\n    options.schemas = Object.values(schemas);\n    defaults.setDiagnosticsOptions(options);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnChanges,\n  OnDestroy,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnInit,\n  HostListener,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CodeEditorService } from '../services/code-editor.service';\nimport { TypescriptDefaultsService } from '../services/typescript-defaults.service';\nimport { JavascriptDefaultsService } from '../services/javascript-defaults.service';\nimport { JsonDefaultsService } from '../services/json-defaults.service';\nimport { CodeModel } from '../models/code.model';\n\ndeclare const monaco: any;\n\n@Component({\n  selector: 'ngs-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line\n  host: { class: 'ngs-code-editor' },\n})\nexport class CodeEditorComponent\n  implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  private _editor: any;\n  private _model: any;\n  // private _value = '';\n\n  private defaultOptions = {\n    lineNumbers: true,\n    contextmenu: false,\n    minimap: {\n      enabled: false,\n    },\n  };\n\n  private subscriptions: Subscription[] = [];\n\n  @ViewChild('editor', { static: true })\n  editorContent: ElementRef;\n\n  @Input()\n  codeModel: CodeModel;\n\n  // @Input()\n  // set value(v: string) {\n  //   if (v !== this._value) {\n  //     this._value = v;\n  //     this.setEditorValue(v);\n  //     this.valueChanged.emit(v);\n  //   }\n  // }\n\n  // get value(): string {\n  //   return this._value;\n  // }\n\n  /**\n   * Editor theme. Defaults to `vs`.\n   *\n   * Allowed values: `vs`, `vs-dark` or `hc-black`.\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  theme = 'vs';\n\n  /**\n   * Editor options.\n   *\n   * See https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html for more details.\n   *\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  options = {};\n\n  /**\n   * Toggle readonly state of the editor.\n   *\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  readOnly = false;\n\n  @Output()\n  valueChanged = new EventEmitter<string>();\n\n  @Output()\n  loaded = new EventEmitter();\n\n  constructor(\n    private editorService: CodeEditorService,\n    private typescriptDefaults: TypescriptDefaultsService,\n    private javascriptDefaults: JavascriptDefaultsService,\n    private jsonDefaults: JsonDefaultsService\n  ) {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.subscriptions = [];\n\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n\n    if (this._model) {\n      this._model.dispose();\n      this._model = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.codeModel && !changes.codeModel.firstChange) {\n      this.updateModel(changes.codeModel.currentValue);\n    }\n\n    if (changes.readOnly && !changes.readOnly.firstChange) {\n      if (this._editor) {\n        this._editor.updateOptions({\n          readOnly: changes.readOnly.currentValue,\n        });\n      }\n    }\n\n    if (changes.theme && !changes.theme.firstChange) {\n      monaco.editor.setTheme(changes.theme.currentValue);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if (this._editor) {\n      this._editor.layout();\n    }\n  }\n\n  async ngAfterViewInit() {\n    await this.editorService.loadEditor();\n    this.setupEditor();\n    this.loaded.emit();\n  }\n\n  private setupEditor() {\n    const domElement: HTMLDivElement = this.editorContent.nativeElement;\n    const settings = {\n      value: '',\n      language: 'text',\n      uri: 'code',\n      ...this.codeModel,\n    };\n\n    this._model = monaco.editor.createModel(\n      settings.value,\n      settings.language,\n      monaco.Uri.file(settings.uri)\n    );\n\n    const options = Object.assign({}, this.defaultOptions, this.options, {\n      readOnly: this.readOnly,\n      theme: this.theme,\n      model: this._model,\n    });\n\n    this._editor = monaco.editor.create(domElement, options);\n\n    this._model.onDidChangeContent((e) => {\n      const newValue = this._model.getValue();\n      if (this.codeModel) {\n        this.codeModel.value = newValue;\n      }\n      this.valueChanged.emit(newValue);\n    });\n\n    this.setupDependencies(this.codeModel);\n  }\n\n  private setupDependencies(model: CodeModel) {\n    if (!model) {\n      return;\n    }\n\n    const { language } = model;\n\n    if (language) {\n      const lang = language.toLowerCase();\n\n      switch (lang) {\n        case 'typescript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'javascript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'json':\n          if (model.schemas) {\n            this.jsonDefaults.addSchemas(model.uri, model.schemas);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private setEditorValue(value: any): void {\n    // Fix for value change while dispose in process.\n    setTimeout(() => {\n      if (this._model) {\n        this._model.setValue(value);\n      }\n    });\n  }\n\n  private updateModel(model: CodeModel) {\n    if (model) {\n      this.setEditorValue(model.value);\n      if (this._model && typeof monaco !== undefined) {\n        monaco.editor.setModelLanguage(this._model, model.language);\n      }\n      this.setupDependencies(model);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport {\n  CodeEditorService,\n  EDITOR_SETTINGS\n} from './services/code-editor.service';\nimport { TypescriptDefaultsService } from './services/typescript-defaults.service';\nimport { JavascriptDefaultsService } from './services/javascript-defaults.service';\nimport { CodeEditorSettings } from './editor-settings';\nimport { JsonDefaultsService } from './services/json-defaults.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CodeEditorComponent],\n  exports: [CodeEditorComponent]\n})\nexport class CodeEditorModule {\n  static forRoot(settings?: CodeEditorSettings): ModuleWithProviders<CodeEditorModule> {\n    return {\n      ngModule: CodeEditorModule,\n      providers: [\n        { provide: EDITOR_SETTINGS, useValue: settings },\n        CodeEditorService,\n        TypescriptDefaultsService,\n        JavascriptDefaultsService,\n        JsonDefaultsService\n      ]\n    };\n  }\n\n  static forChild(): ModuleWithProviders<CodeEditorModule> {\n    return {\n      ngModule: CodeEditorModule\n    };\n  }\n}\n","/*\n * Public API Surface of code-editor\n */\n\nexport * from './lib/services/code-editor.service';\nexport * from './lib/services/typescript-defaults.service';\nexport * from './lib/services/javascript-defaults.service';\n\nexport * from './lib/models/code.model';\n\nexport * from './lib/code-editor/code-editor.component';\n\nexport * from './lib/code-editor.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CodeEditorSettings as ɵa} from './lib/editor-settings';\nexport {JsonDefaultsService as ɵb} from './lib/services/json-defaults.service';"],"names":[],"mappings":"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"}