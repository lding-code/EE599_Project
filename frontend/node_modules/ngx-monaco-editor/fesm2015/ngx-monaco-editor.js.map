{"version":3,"file":"ngx-monaco-editor.js","sources":["ng://ngx-monaco-editor/lib/base-editor.ts","ng://ngx-monaco-editor/lib/config.ts","ng://ngx-monaco-editor/lib/editor.component.ts","ng://ngx-monaco-editor/lib/diff-editor.component.ts","ng://ngx-monaco-editor/lib/editor.module.ts","ng://ngx-monaco-editor/public-api.ts","ng://ngx-monaco-editor/ngx-monaco-editor.ts"],"sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgxMonacoEditorConfig } from './config';\n\nlet loadedMonaco = false;\nlet loadPromise: Promise<void>;\ndeclare const require: any;\n\nexport abstract class BaseEditor implements AfterViewInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) _editorContainer: ElementRef;\n  @Output() onInit = new EventEmitter<any>();\n  protected _editor: any;\n  protected _options: any;\n  protected _windowResizeSubscription: Subscription;\n\n  constructor(protected config: NgxMonacoEditorConfig) {}\n\n  ngAfterViewInit(): void {\n    if (loadedMonaco) {\n      // Wait until monaco editor is available\n      loadPromise.then(() => {\n        this.initMonaco(this._options);\n      });\n    } else {\n      loadedMonaco = true;\n      loadPromise = new Promise<void>((resolve: any) => {\n        const baseUrl = this.config.baseUrl || './assets';\n        if (typeof ((<any>window).monaco) === 'object') {\n          resolve();\n          return;\n        }\n        const onGotAmdLoader: any = () => {\n          // Load monaco\n          (<any>window).require.config({ paths: { 'vs': `${baseUrl}/monaco/vs` } });\n          (<any>window).require(['vs/editor/editor.main'], () => {\n            if (typeof this.config.onMonacoLoad === 'function') {\n              this.config.onMonacoLoad();\n            }\n            this.initMonaco(this._options);\n            resolve();\n          });\n        };\n\n        // Load AMD loader if necessary\n        if (!(<any>window).require) {\n          const loaderScript: HTMLScriptElement = document.createElement('script');\n          loaderScript.type = 'text/javascript';\n          loaderScript.src = `${baseUrl}/monaco/vs/loader.js`;\n          loaderScript.addEventListener('load', onGotAmdLoader);\n          document.body.appendChild(loaderScript);\n        } else {\n          onGotAmdLoader();\n        }\n      });\n    }\n  }\n\n  protected abstract initMonaco(options: any): void;\n\n  ngOnDestroy() {\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = undefined;\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_MONACO_EDITOR_CONFIG = new InjectionToken('NGX_MONACO_EDITOR_CONFIG');\n\nexport interface NgxMonacoEditorConfig {\n  baseUrl?: string;\n  defaultOptions?: { [key: string]: any; },\n  onMonacoLoad?: Function;\n}\n","import { Component, forwardRef, Inject, Input, NgZone } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\n\nimport { BaseEditor } from './base-editor';\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { NgxEditorModel } from './types';\n\n@Component({\n  selector: 'ngx-monaco-editor',\n  template: '<div class=\"editor-container\" #editorContainer></div>',\n  styles: [`\n    :host {\n      display: block;\n      height: 200px;\n    }\n\n    .editor-container {\n      width: 100%;\n      height: 98%;\n    }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n  }]\n})\nexport class EditorComponent extends BaseEditor implements ControlValueAccessor {\n  private _value: string = '';\n\n  propagateChange = (_: any) => {};\n  onTouched = () => {};\n\n  @Input('options')\n  set options(options: any) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(options);\n    }\n  }\n\n  get options(): any {\n    return this._options;\n  }\n\n  @Input('model')\n  set model(model: NgxEditorModel) {\n    this.options.model = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  constructor(private zone: NgZone, @Inject(NGX_MONACO_EDITOR_CONFIG) private editorConfig: NgxMonacoEditorConfig) {\n    super(editorConfig);\n  }\n\n  writeValue(value: any): void {\n    this._value = value || '';\n    // Fix for value change while dispose in process.\n    setTimeout(() => {\n      if (this._editor && !this.options.model) {\n        this._editor.setValue(this._value);\n      }\n    });\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  protected initMonaco(options: any): void {\n\n    const hasModel = !!options.model;\n\n    if (hasModel) {\n      const model = monaco.editor.getModel(options.model.uri || '');\n      if(model) {\n        options.model = model;\n        options.model.setValue(this._value);\n      } else {\n        options.model = monaco.editor.createModel(options.model.value, options.model.language, options.model.uri);\n      }\n    }\n\n    this._editor = monaco.editor.create(this._editorContainer.nativeElement, options);\n\n    if (!hasModel) {\n      this._editor.setValue(this._value);\n    }\n\n    this._editor.onDidChangeModelContent((e: any) => {\n      const value = this._editor.getValue();\n      \n      // value is not propagated to parent when executing outside zone.\n      this.zone.run(() => {\n        this.propagateChange(value);\n        this._value = value;\n      });\n    });\n\n    this._editor.onDidBlurEditorWidget(() => {\n      this.onTouched();\n    });\n\n    // refresh layout on resize event.\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n","import { Component, Inject, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport { BaseEditor } from './base-editor';\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { DiffEditorModel } from './types';\n\n@Component({\n  selector: 'ngx-monaco-diff-editor',\n  template: '<div class=\"editor-container\" #editorContainer></div>',\n  styles: [`\n    :host {\n      display: block;\n      height: 200px;\n    }\n\n    .editor-container {\n      width: 100%;\n      height: 98%;\n    }\n  `]\n})\nexport class DiffEditorComponent extends BaseEditor {\n\n  _originalModel: DiffEditorModel;\n  _modifiedModel: DiffEditorModel;\n\n  @Input('options')\n  set options(options: any) {\n    this._options = Object.assign({}, this.config.defaultOptions, options);\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(options);\n    }\n  }\n\n  get options(): any {\n    return this._options;\n  }\n\n  @Input('originalModel')\n  set originalModel(model: DiffEditorModel) {\n    this._originalModel = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  @Input('modifiedModel')\n  set modifiedModel(model: DiffEditorModel) {\n    this._modifiedModel = model;\n    if (this._editor) {\n      this._editor.dispose();\n      this.initMonaco(this.options);\n    }\n  }\n\n  constructor(@Inject(NGX_MONACO_EDITOR_CONFIG) private editorConfig: NgxMonacoEditorConfig) {\n    super(editorConfig);\n  }\n\n  protected initMonaco(options: any): void {\n\n    if (!this._originalModel || !this._modifiedModel) {\n      throw new Error('originalModel or modifiedModel not found for ngx-monaco-diff-editor');\n    }\n\n    this._originalModel.language = this._originalModel.language || options.language;\n    this._modifiedModel.language = this._modifiedModel.language || options.language;\n\n    let originalModel = monaco.editor.createModel(this._originalModel.code, this._originalModel.language);\n    let modifiedModel = monaco.editor.createModel(this._modifiedModel.code, this._modifiedModel.language);\n\n    this._editorContainer.nativeElement.innerHTML = '';\n    const theme = options.theme;\n    this._editor = monaco.editor.createDiffEditor(this._editorContainer.nativeElement, options);\n    options.theme = theme;\n    this._editor.setModel({\n      original: originalModel,\n      modified: modifiedModel\n    });\n\n    // refresh layout on resize event.\n    if (this._windowResizeSubscription) {\n      this._windowResizeSubscription.unsubscribe();\n    }\n    this._windowResizeSubscription = fromEvent(window, 'resize').subscribe(() => this._editor.layout());\n    this.onInit.emit(this._editor);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NGX_MONACO_EDITOR_CONFIG, NgxMonacoEditorConfig } from './config';\nimport { DiffEditorComponent } from './diff-editor.component';\nimport { EditorComponent } from './editor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    EditorComponent,\n    DiffEditorComponent\n  ],\n  exports: [\n    EditorComponent,\n    DiffEditorComponent\n  ]\n})\nexport class MonacoEditorModule {\n  public static forRoot(config: NgxMonacoEditorConfig = {}): ModuleWithProviders<MonacoEditorModule> {\n    return {\n      ngModule: MonacoEditorModule,\n      providers: [\n        { provide: NGX_MONACO_EDITOR_CONFIG, useValue: config }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of my-lib\n */\n\nexport * from './lib/editor.component';\nexport * from './lib/diff-editor.component';\nexport * from './lib/editor.module';\nexport * from './lib/config';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseEditor as ɵa} from './lib/base-editor';"],"names":[],"mappings":"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"}