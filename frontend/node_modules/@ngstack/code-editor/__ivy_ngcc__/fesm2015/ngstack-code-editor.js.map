{"version":3,"file":"ngstack-code-editor.js","sources":["ng:/@ngstack/code-editor/lib/services/code-editor.service.ts","ng:/@ngstack/code-editor/lib/services/typescript-defaults.service.ts","ng:/@ngstack/code-editor/lib/services/javascript-defaults.service.ts","ng:/@ngstack/code-editor/lib/services/json-defaults.service.ts","ng:/@ngstack/code-editor/lib/code-editor/code-editor.component.ts","ng:/@ngstack/code-editor/lib/code-editor.module.ts","ng:/@ngstack/code-editor/public_api.ts","ng:/@ngstack/code-editor/ngstack-code-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, InjectionToken, Optional, Inject } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { CodeEditorSettings } from '../editor-settings';\n\ndeclare const monaco: any;\n\nexport const EDITOR_SETTINGS = new InjectionToken<CodeEditorSettings>(\n  'EDITOR_SETTINGS'\n);\n\nexport interface TypingsInfo {\n  entryPoints: { [key: string]: string };\n  files: Array<{\n    content: string;\n    name: string;\n    url: string;\n    path: string;\n  }>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodeEditorService {\n  // baseUrl = 'assets/monaco';\n  baseUrl = 'https://unpkg.com/monaco-editor/min';\n\n  // typingsWorkerUrl = 'assets/workers/typings-worker.js';\n  typingsWorkerUrl =\n    'https://unpkg.com/@ngstack/code-editor/workers/typings-worker.js';\n\n  typingsLoaded = new Subject<TypingsInfo>();\n  loaded = new Subject<{ monaco: any }>();\n\n  loadingTypings = new BehaviorSubject<boolean>(false);\n\n  private typingsWorker: Worker;\n\n  constructor(\n    @Optional()\n    @Inject(EDITOR_SETTINGS)\n    settings: CodeEditorSettings\n  ) {\n    const defaults = {\n      baseUrl: this.baseUrl,\n      typingsWorkerUrl: this.typingsWorkerUrl,\n      ...settings\n    };\n\n    this.baseUrl = defaults.baseUrl;\n    this.typingsWorkerUrl = defaults.typingsWorkerUrl;\n  }\n\n  private loadTypingsWorker(): Worker {\n    if (!this.typingsWorker && (<any>window).Worker) {\n      if (this.typingsWorkerUrl.startsWith('http')) {\n        const proxyScript = `importScripts('${this.typingsWorkerUrl}');`;\n        const proxy = URL.createObjectURL(\n          new Blob([proxyScript], { type: 'text/javascript' })\n        );\n        this.typingsWorker = new Worker(proxy);\n      } else {\n        this.typingsWorker = new Worker(this.typingsWorkerUrl);\n      }\n      this.typingsWorker.addEventListener('message', e => {\n        this.loadingTypings.next(false);\n        this.typingsLoaded.next(e.data);\n      });\n    }\n    return this.typingsWorker;\n  }\n\n  loadTypings(dependencies: string[]) {\n    if (dependencies && dependencies.length > 0) {\n      const worker = this.loadTypingsWorker();\n      if (worker) {\n        this.loadingTypings.next(true);\n        worker.postMessage({\n          dependencies\n        });\n      }\n    }\n  }\n\n  loadEditor(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const onGotAmdLoader = () => {\n        (<any>window).require.config({\n          paths: { vs: `${this.baseUrl}/vs` }\n        });\n\n        if (this.baseUrl.startsWith('http')) {\n          const proxyScript = `\n            self.MonacoEnvironment = {\n              baseUrl: \"${this.baseUrl}\"\n            };\n            importScripts('${this.baseUrl}/vs/base/worker/workerMain.js');\n          `;\n          const proxy = URL.createObjectURL(\n            new Blob([proxyScript], { type: 'text/javascript' })\n          );\n          window['MonacoEnvironment'] = {\n            getWorkerUrl: function() {\n              return proxy;\n            }\n          };\n        }\n\n        (<any>window).require(['vs/editor/editor.main'], () => {\n          this.loaded.next({ monaco });\n          resolve();\n        });\n      };\n\n      if (!(<any>window).require) {\n        const loaderScript = document.createElement('script');\n        loaderScript.type = 'text/javascript';\n        loaderScript.src = `${this.baseUrl}/vs/loader.js`;\n        loaderScript.addEventListener('load', onGotAmdLoader);\n        document.body.appendChild(loaderScript);\n      } else {\n        onGotAmdLoader();\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService, TypingsInfo } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypescriptDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.typescript.typescriptDefaults;\n\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      noEmit: true,\n      noLib: true,\n      emitDecoratorMetadata: true,\n      experimentalDecorators: true,\n      allowNonTsExtensions: true,\n      declaration: true,\n      lib: ['es2017', 'dom'],\n      baseUrl: '.',\n      paths: {}\n    });\n\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: true,\n      noSyntaxValidation: true\n    });\n    */\n  }\n\n  updateTypings(typings: TypingsInfo) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n\n  addExtraLibs(libs: Array<{ path: string; content: string }> = []): void {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n\n  addLibraryPaths(paths: { [key: string]: string } = {}): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.typescriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService, TypingsInfo } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JavascriptDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n    codeEditorService.typingsLoaded.subscribe(typings => {\n      this.updateTypings(typings);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.typescript.javascriptDefaults;\n\n    defaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES6,\n      module: 'commonjs',\n      allowNonTsExtensions: true,\n      baseUrl: '.',\n      paths: {}\n    });\n\n    defaults.setMaximumWorkerIdleTime(-1);\n    defaults.setEagerModelSync(true);\n\n    /*\n    defaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n    */\n  }\n\n  updateTypings(typings: TypingsInfo) {\n    if (typings) {\n      this.addExtraLibs(typings.files);\n      this.addLibraryPaths(typings.entryPoints);\n    }\n  }\n\n  addExtraLibs(libs: Array<{ path: string; content: string }> = []): void {\n    if (!this.monaco || !libs || libs.length === 0) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n\n    // undocumented API\n    const registeredLibs = defaults.getExtraLibs();\n\n    libs.forEach(lib => {\n      if (!registeredLibs[lib.path]) {\n        // needs performance improvements, recreates its worker each time\n        // defaults.addExtraLib(lib.content, lib.path);\n        // undocumented API\n        defaults._extraLibs[lib.path] = lib.content;\n      }\n    });\n\n    // undocumented API\n    defaults._onDidChange.fire(defaults);\n  }\n\n  addLibraryPaths(paths: { [key: string]: string } = {}): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    const defaults = this.monaco.languages.typescript.javascriptDefaults;\n    const compilerOptions = defaults.getCompilerOptions();\n    compilerOptions.paths = compilerOptions.paths || {};\n\n    Object.keys(paths).forEach(key => {\n      compilerOptions.paths[key] = [paths[key]];\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CodeEditorService } from './code-editor.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonDefaultsService {\n  private monaco: any;\n\n  constructor(codeEditorService: CodeEditorService) {\n    codeEditorService.loaded.subscribe(event => {\n      this.setup(event.monaco);\n    });\n  }\n\n  setup(monaco: any): void {\n    if (!monaco) {\n      return;\n    }\n\n    this.monaco = monaco;\n\n    const defaults = monaco.languages.json.jsonDefaults;\n\n    defaults.setDiagnosticsOptions({\n      validate: true,\n      allowComments: true,\n      schemas: [\n        ...defaults._diagnosticsOptions.schemas,\n        {\n          uri: 'http://myserver/foo-schema.json',\n          // fileMatch: [id],\n          // fileMatch: ['*.json'],\n          schema: {\n            type: 'object',\n            properties: {\n              p1: {\n                enum: ['v1', 'v2']\n              },\n              p2: {\n                $ref: 'http://myserver/bar-schema.json'\n              }\n            }\n          }\n        },\n        {\n          uri: 'http://myserver/bar-schema.json',\n          // fileMatch: [id],\n          // fileMatch: ['*.json'],\n          schema: {\n            type: 'object',\n            properties: {\n              q1: {\n                enum: ['x1', 'x2']\n              }\n            }\n          }\n        }\n      ]\n    });\n  }\n\n  addSchemas(\n    id: string,\n    definitions: Array<{ uri: string; schema: Object }> = []\n  ) {\n    const defaults = this.monaco.languages.json.jsonDefaults;\n    const options = defaults.diagnosticsOptions;\n\n    const schemas: { [key: string]: Object } = {};\n\n    if (options && options.schemas && options.schemas.length > 0) {\n      options.schemas.forEach(schema => {\n        schemas[schema.uri] = schema;\n      });\n    }\n\n    for (const { uri, schema } of definitions) {\n      schemas[uri] = {\n        uri,\n        schema,\n        fileMatch: [id || '*.json']\n      };\n    }\n\n    // console.log(schemas);\n    // console.log(Object.values(schemas));\n\n    options.schemas = Object.values(schemas);\n    defaults.setDiagnosticsOptions(options);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnChanges,\n  OnDestroy,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnInit,\n  HostListener,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CodeEditorService } from '../services/code-editor.service';\nimport { TypescriptDefaultsService } from '../services/typescript-defaults.service';\nimport { JavascriptDefaultsService } from '../services/javascript-defaults.service';\nimport { JsonDefaultsService } from '../services/json-defaults.service';\nimport { CodeModel } from '../models/code.model';\n\ndeclare const monaco: any;\n\n@Component({\n  selector: 'ngs-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line\n  host: { class: 'ngs-code-editor' },\n})\nexport class CodeEditorComponent\n  implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  private _editor: any;\n  private _model: any;\n  // private _value = '';\n\n  private defaultOptions = {\n    lineNumbers: true,\n    contextmenu: false,\n    minimap: {\n      enabled: false,\n    },\n  };\n\n  private subscriptions: Subscription[] = [];\n\n  @ViewChild('editor', { static: true })\n  editorContent: ElementRef;\n\n  @Input()\n  codeModel: CodeModel;\n\n  // @Input()\n  // set value(v: string) {\n  //   if (v !== this._value) {\n  //     this._value = v;\n  //     this.setEditorValue(v);\n  //     this.valueChanged.emit(v);\n  //   }\n  // }\n\n  // get value(): string {\n  //   return this._value;\n  // }\n\n  /**\n   * Editor theme. Defaults to `vs`.\n   *\n   * Allowed values: `vs`, `vs-dark` or `hc-black`.\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  theme = 'vs';\n\n  /**\n   * Editor options.\n   *\n   * See https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html for more details.\n   *\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  options = {};\n\n  /**\n   * Toggle readonly state of the editor.\n   *\n   * @memberof CodeEditorComponent\n   */\n  @Input()\n  readOnly = false;\n\n  @Output()\n  valueChanged = new EventEmitter<string>();\n\n  @Output()\n  loaded = new EventEmitter();\n\n  constructor(\n    private editorService: CodeEditorService,\n    private typescriptDefaults: TypescriptDefaultsService,\n    private javascriptDefaults: JavascriptDefaultsService,\n    private jsonDefaults: JsonDefaultsService\n  ) {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.subscriptions = [];\n\n    if (this._editor) {\n      this._editor.dispose();\n      this._editor = null;\n    }\n\n    if (this._model) {\n      this._model.dispose();\n      this._model = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.codeModel && !changes.codeModel.firstChange) {\n      this.updateModel(changes.codeModel.currentValue);\n    }\n\n    if (changes.readOnly && !changes.readOnly.firstChange) {\n      if (this._editor) {\n        this._editor.updateOptions({\n          readOnly: changes.readOnly.currentValue,\n        });\n      }\n    }\n\n    if (changes.theme && !changes.theme.firstChange) {\n      monaco.editor.setTheme(changes.theme.currentValue);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    if (this._editor) {\n      this._editor.layout();\n    }\n  }\n\n  async ngAfterViewInit() {\n    await this.editorService.loadEditor();\n    this.setupEditor();\n    this.loaded.emit();\n  }\n\n  private setupEditor() {\n    const domElement: HTMLDivElement = this.editorContent.nativeElement;\n    const settings = {\n      value: '',\n      language: 'text',\n      uri: 'code',\n      ...this.codeModel,\n    };\n\n    this._model = monaco.editor.createModel(\n      settings.value,\n      settings.language,\n      monaco.Uri.file(settings.uri)\n    );\n\n    const options = Object.assign({}, this.defaultOptions, this.options, {\n      readOnly: this.readOnly,\n      theme: this.theme,\n      model: this._model,\n    });\n\n    this._editor = monaco.editor.create(domElement, options);\n\n    this._model.onDidChangeContent((e) => {\n      const newValue = this._model.getValue();\n      if (this.codeModel) {\n        this.codeModel.value = newValue;\n      }\n      this.valueChanged.emit(newValue);\n    });\n\n    this.setupDependencies(this.codeModel);\n  }\n\n  private setupDependencies(model: CodeModel) {\n    if (!model) {\n      return;\n    }\n\n    const { language } = model;\n\n    if (language) {\n      const lang = language.toLowerCase();\n\n      switch (lang) {\n        case 'typescript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'javascript':\n          if (model.dependencies) {\n            this.editorService.loadTypings(model.dependencies);\n          }\n          break;\n        case 'json':\n          if (model.schemas) {\n            this.jsonDefaults.addSchemas(model.uri, model.schemas);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private setEditorValue(value: any): void {\n    // Fix for value change while dispose in process.\n    setTimeout(() => {\n      if (this._model) {\n        this._model.setValue(value);\n      }\n    });\n  }\n\n  private updateModel(model: CodeModel) {\n    if (model) {\n      this.setEditorValue(model.value);\n      if (this._model && typeof monaco !== undefined) {\n        monaco.editor.setModelLanguage(this._model, model.language);\n      }\n      this.setupDependencies(model);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport {\n  CodeEditorService,\n  EDITOR_SETTINGS\n} from './services/code-editor.service';\nimport { TypescriptDefaultsService } from './services/typescript-defaults.service';\nimport { JavascriptDefaultsService } from './services/javascript-defaults.service';\nimport { CodeEditorSettings } from './editor-settings';\nimport { JsonDefaultsService } from './services/json-defaults.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CodeEditorComponent],\n  exports: [CodeEditorComponent]\n})\nexport class CodeEditorModule {\n  static forRoot(settings?: CodeEditorSettings): ModuleWithProviders<CodeEditorModule> {\n    return {\n      ngModule: CodeEditorModule,\n      providers: [\n        { provide: EDITOR_SETTINGS, useValue: settings },\n        CodeEditorService,\n        TypescriptDefaultsService,\n        JavascriptDefaultsService,\n        JsonDefaultsService\n      ]\n    };\n  }\n\n  static forChild(): ModuleWithProviders<CodeEditorModule> {\n    return {\n      ngModule: CodeEditorModule\n    };\n  }\n}\n","/*\n * Public API Surface of code-editor\n */\n\nexport * from './lib/services/code-editor.service';\nexport * from './lib/services/typescript-defaults.service';\nexport * from './lib/services/javascript-defaults.service';\n\nexport * from './lib/models/code.model';\n\nexport * from './lib/code-editor/code-editor.component';\n\nexport * from './lib/code-editor.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CodeEditorSettings as ɵa} from './lib/editor-settings';\nexport {JsonDefaultsService as ɵb} from './lib/services/json-defaults.service';"]}